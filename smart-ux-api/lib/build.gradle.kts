/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
}

group = "com.smartuxapi.ai"  // 그룹 ID 설정
version = "0.3.0"            // 프로젝트 버전 설정

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation(libs.junit)

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api(libs.commons.math3)

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation(libs.guava)
    
    implementation("jakarta.servlet:jakarta.servlet-api:5.0.0")
    
    implementation("com.fasterxml.jackson.core:jackson-databind:2.15.3")
    implementation("com.fasterxml.jackson.core:jackson-core:2.15.3")
    implementation("com.fasterxml.jackson.core:jackson-annotations:2.15.3")
    
    implementation("com.googlecode.json-simple:json-simple:1.1.1")
    implementation("org.json:json:20250517")
    
    implementation("org.apache.logging.log4j:log4j-api:2.21.0")   // Log4j API
    implementation("org.apache.logging.log4j:log4j-core:2.21.0")  // Log4j Core
    
    testImplementation("org.junit.jupiter:junit-jupiter:5.8.2")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.jar {
    archiveFileName.set("${rootProject.name}-${project.version}.jar")
}